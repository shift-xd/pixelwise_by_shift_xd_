<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shift Photo Helper - AI Photo Editing Assistant</title>
    <style>
        :root {
            --bg-color: #f5f5f7;
            --text-color: #1d1d1f;
            --primary-color: #0071e3;
            --secondary-color: #86868b;
            --card-bg: #ffffff;
            --border-radius: 18px;
            --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
        }
        
        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            line-height: 1.5;
            padding: 0;
            margin: 0;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        header {
            background-color: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            position: sticky;
            top: 0;
            z-index: 100;
            padding: 15px 0;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }
        
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 24px;
            font-weight: 600;
            color: var(--text-color);
            text-decoration: none;
        }
        
        .hero {
            text-align: center;
            padding: 80px 0 60px;
        }
        
        .hero h1 {
            font-size: 56px;
            font-weight: 600;
            margin-bottom: 10px;
            letter-spacing: -0.5px;
        }
        
        .hero p {
            font-size: 24px;
            color: var(--secondary-color);
            max-width: 700px;
            margin: 0 auto 40px;
        }
        
        .editor-section {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 40px;
            margin-bottom: 60px;
        }
        
        .editor-container {
            display: flex;
            gap: 30px;
            margin-top: 30px;
        }
        
        .image-upload {
            flex: 1;
            border: 2px dashed #d2d2d7;
            border-radius: var(--border-radius);
            padding: 30px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 400px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .image-upload:hover {
            border-color: var(--primary-color);
        }
        
        .image-upload p {
            color: var(--secondary-color);
            margin-top: 20px;
            text-align: center;
        }
        
        .image-preview {
            max-width: 100%;
            max-height: 400px;
            border-radius: 12px;
            display: none;
        }
        
        .ai-panel {
            flex: 1;
            display: flex;
            flex-direction: column;
        }
        
        .ai-response {
            flex: 1;
            background-color: var(--bg-color);
            border-radius: var(--border-radius);
            padding: 20px;
            margin-bottom: 20px;
            overflow-y: auto;
            max-height: 300px;
        }
        
        .prompt-input {
            display: flex;
            gap: 10px;
        }
        
        .prompt-input input {
            flex: 1;
            padding: 15px;
            border: 1px solid #d2d2d7;
            border-radius: var(--border-radius);
            font-size: 16px;
        }
        
        .prompt-input button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            padding: 0 25px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .prompt-input button:hover {
            background-color: #0077ed;
        }
        
        footer {
            background-color: var(--card-bg);
            padding: 40px 0;
            margin-top: 60px;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
            text-align: center;
            color: var(--secondary-color);
            font-size: 14px;
        }
        
        @media (max-width: 768px) {
            .editor-container {
                flex-direction: column;
            }
            
            .hero h1 {
                font-size: 36px;
            }
            
            .hero p {
                font-size: 18px;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <nav>
                <a href="#" class="logo">Shift Photo Helper</a>
            </nav>
        </div>
    </header>
    
    <main class="container">
        <section class="hero">
            <h1>AI Photo Editing Assistant</h1>
            <p>Upload your photos and get professional editing recommendations powered by AI.</p>
        </section>
        
        <section class="editor-section">
            <h2>Photo Analysis</h2>
            <p>Upload your image and ask our AI for editing suggestions.</p>
            
            <div class="editor-container">
                <div class="image-upload" id="dropArea">
                    <img id="previewImage" class="image-preview" alt="Preview">
                    <svg width="48" height="48" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M4 16L8.586 11.414C8.961 11.039 9.47 10.828 10 10.828C10.53 10.828 11.039 11.039 11.414 11.414L16 16M14 14L15.586 12.414C15.961 12.039 16.47 11.828 17 11.828C17.53 11.828 18.039 12.039 18.414 12.414L20 14M14 8H14.01M6 20H18C19.105 20 20 19.105 20 18V6C20 4.895 19.105 4 18 4H6C4.895 4 4 4.895 4 6V18C4 19.105 4.895 20 6 20Z" stroke="#86868b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                    <p>Drag & drop your image here or click to browse</p>
                    <input type="file" id="fileInput" accept="image/*" style="display: none;">
                </div>
                
                <div class="ai-panel">
                    <div class="ai-response" id="aiResponse">
                        <p>Upload a photo to get AI-powered editing suggestions.</p>
                    </div>
                    <div class="prompt-input">
                        <input type="text" id="userPrompt" placeholder="Ask about editing this photo (e.g., 'How can I improve the colors?')">
                        <button id="askButton">Ask</button>
                    </div>
                </div>
            </div>
        </section>
    </main>
    
    <footer>
        <div class="container">
            <p>Shift Photo Helper - AI Photo Editing Assistant</p>
        </div>
    </footer>
    
    <script>
        // API Configuration
        const OPENROUTER_API_KEY = "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";
        const MODEL = "meta-llama/llama-4-maverick:free";
        
        // DOM Elements
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('fileInput');
        const previewImage = document.getElementById('previewImage');
        const aiResponse = document.getElementById('aiResponse');
        const userPrompt = document.getElementById('userPrompt');
        const askButton = document.getElementById('askButton');
        
        let currentImageUrl = null;
        
        // Handle drag and drop
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });
        
        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }
        
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });
        
        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });
        
        function highlight() {
            dropArea.style.borderColor = '#0071e3';
            dropArea.style.backgroundColor = 'rgba(0, 113, 227, 0.05)';
        }
        
        function unhighlight() {
            dropArea.style.borderColor = '#d2d2d7';
            dropArea.style.backgroundColor = 'transparent';
        }
        
        // Handle file drop
        dropArea.addEventListener('drop', handleDrop, false);
        
        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }
        
        // Handle file selection via click
        dropArea.addEventListener('click', () => {
            fileInput.click();
        });
        
        fileInput.addEventListener('change', function() {
            handleFiles(this.files);
        });
        
        function handleFiles(files) {
            if (files.length) {
                const file = files[0];
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        previewImage.src = e.target.result;
                        previewImage.style.display = 'block';
                        dropArea.querySelector('svg').style.display = 'none';
                        dropArea.querySelector('p').style.display = 'none';
                        
                        // Store the data URL for API calls
                        currentImageUrl = e.target.result;
                        
                        // Auto-analyze the image
                        analyzeImage();
                    };
                    reader.readAsDataURL(file);
                }
            }
        }
        
        // Analyze the image with AI
        async function analyzeImage(prompt = "Analyze this photo and provide detailed editing recommendations to improve it.") {
            if (!currentImageUrl) return;
            
            aiResponse.innerHTML += '<p>Analyzing your image...</p>';
            scrollToBottom();
            
            try {
                const response = await queryAI(prompt, currentImageUrl);
                aiResponse.innerHTML += `<p><strong>AI:</strong> ${response}</p>`;
            } catch (error) {
                console.error('AI Error:', error);
                aiResponse.innerHTML += '<p>Sorry, there was an error processing your request. Please try again.</p>';
            }
            
            scrollToBottom();
        }
        
        // Query the AI model
        async function queryAI(prompt, imageDataUrl) {
            // In a production environment, you would send this to your backend
            // For demo purposes, we'll call OpenRouter directly from the frontend
            // Note: This exposes your API key in the client, which is not secure for production
            
            const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
                    'Content-Type': 'application/json',
                    'HTTP-Referer': window.location.href,
                    'X-Title': 'Shift Photo Helper'
                },
                body: JSON.stringify({
                    model: MODEL,
                    messages: [
                        {
                            role: "system",
                            content: "You are a professional photo editor. Provide detailed, technical recommendations for improving photos. Include specific editing suggestions like adjustments to exposure, contrast, color balance, cropping, etc. Be concise but thorough."
                        },
                        {
                            role: "user",
                            content: [
                                {
                                    type: "text",
                                    text: prompt
                                },
                                {
                                    type: "image_url",
                                    image_url: {
                                        url: imageDataUrl
                                    }
                                }
                            ]
                        }
                    ]
                })
            });
            
            if (!response.ok) {
                throw new Error(`API request failed with status ${response.status}`);
            }
            
            const data = await response.json();
            return data.choices[0].message.content;
        }
        
        // Handle user questions
        askButton.addEventListener('click', async function() {
            if (!currentImageUrl) {
                alert('Please upload an image first');
                return;
            }
            
            const question = userPrompt.value.trim();
            if (!question) {
                alert('Please enter a question');
                return;
            }
            
            userPrompt.value = '';
            
            aiResponse.innerHTML += `<p><strong>You:</strong> ${question}</p>`;
            scrollToBottom();
            
            await analyzeImage(question);
        });
        
        // Allow pressing Enter to submit question
        userPrompt.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                askButton.click();
            }
        });
        
        function scrollToBottom() {
            aiResponse.scrollTop = aiResponse.scrollHeight;
        }
    </script>
</body>
</html>